객체지향개발(OOP) 4가지 특성
객체지향개발(Object Oriented Programming)의 특성은 크게 추상화, 캡슐화, 상속성, 다형성이 있다.

추상화(Abstraciton)
공통의 속성이나 기능을 묶어 이름을 붙이는 것
OOP 에서 클래스를 정의하는 것을 추상화라고 할 수 있다.
캡슐화 (Encapsulation)
변수와 함수를 하나로 묶어서 외부에서의 접근을 막고, 함수를 통해서만 접근 가능하도록 하는 것
객체가 맡은 역할을 수행하기 위한 데이터를 하나로 묶는다 (은닉화)
상속성, 재사용 (Inheritance)
상위 개념의 특징을 하위 개념이 물려 받는 것
다형성 (Polymorphism)
부모 클래스로부터 물려받은 가상 함수를 자식 클래스 내에서 오버라이딩 하여 사용하는 것

객체지향 프로그래밍적인 관점에서 객체는 클래스의 타입으로 선언되었을 때를
	의미하는 것이고, 그 객체가 메모리에 할당되어 실제 사용될 때를 인스턴스라고 하는 것이다.
	즉, 인스턴스는 추상화 개념 또는 클래스 객체, 컴퓨터 프로세스 등과 같은 
	템플릿이 실제 구현된 것이다. 
	인스턴스화는 클래스 내의 객체에 대해 특정한 변형을 정의하고, 이름을 붙인 다음, 
	그것을 물리적인 어떤 장소에 위치시키는 등의 작업을 통해, 인스턴스를 만드는 것을 의미한다


