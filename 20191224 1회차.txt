20191224
C:\Users\ICT01_14\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Anaconda3 (64-bit)
파이썬 다운로드 
https://www.anaconda.com/distribution/#windows 
에서 python 3.7 version 64 bit 

anaconda3 prompt _> python 타이핑 후  > 나갈 때에는 ctrl + z

jupyter Notebook(anaconda3) - chrome 으로 열기 

http://localhost:8888/tree/Documents


------------------------------------------------
파이썬 교육과정 over view

python core -> numpy ->pandas -> scipy stats models -> scikit -> tensor flow ->keras
       ↓
crawling
maria db - virtual box
mongo db - 백데이터 분산처리 _ 여러개의 컴퓨터가 협력해서 문제 처리 

R :분석 전용 언어
python : 범용 언어_ 

factor 연산은  크기 , 내정으로 나옴
이를 통해 상관성이 높은 것 끼리 묶을 수 있음


전처리 과정 - 결측치
                     -이상치제거
                     -범주화*_ mapping을 더 쉽게하려고_ 대부분 범주별로 분석
                     -정규화_ 값을 0-1까지 정규화하는 것 : min max normalization

고속으로 데이터 처리할 때에는 '배열'이 가장 빠르다_but 삽입 삭제가 불량 
but 파이썬은 '배열' 없음_ 삽입 삭제를 용이하게 하기위해 list 사용 _ 사용 방법은 동일

*python 자료 구조 
-list[] _'배열'과 동일
-dict{} _hash함수 이용_저장할 때부터 메모리 기억번지를 부여 _ eg) 김 은 108번 번지_key는 중복을 불허
-set
-tuple() _ 형태는 list 와 tuple은 동일하지만 tuple은 수정이 불가능하다 so  매개변수나 return값으로 사용

python 은 데이터 타입을 지정하지않음_ pointer(주소값을 저장하기)때문에?
 a = 10
a라는 주소가  heep 영역에 저장됨 

program _ heep(메모리 할당 영역), stack, program
heep에 데이터 저장한 후  주소만 stack에 보내줌 
초기화되지않은 변수를 쓰면 error

numpy( vector, matrix, array)-> 선형대수 _ 일반화가 쉽기때문이 선형 사용






